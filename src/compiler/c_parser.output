Terminals unused in grammar

   Goto_KEY
   Union_KEY
   Restrict_KEY
   PTR_Ref


State 14 conflicts: 19 reduce/reduce
State 78 conflicts: 6 shift/reduce
State 132 conflicts: 1 shift/reduce
State 207 conflicts: 1 reduce/reduce
State 296 conflicts: 1 shift/reduce


Grammar

    0 $accept: root $end

    1 root: top_declaration

    2 top_declaration: top_declaration declaration
    3                | top_declaration function_definition
    4                | top_declaration Semicolon
    5                | declaration
    6                | Semicolon
    7                | function_definition

    8 expression: assign_expressions
    9           | expression Comma assign_expressions

   10 assign_expressions: constant_expression
   11                   | unary_expression Equal assign_expressions
   12                   | unary_expression Add_CURRENT assign_expressions
   13                   | unary_expression Sub_CURRENT assign_expressions
   14                   | unary_expression Mul_CURRENT assign_expressions
   15                   | unary_expression Div_CURRENT assign_expressions
   16                   | unary_expression Mod_CURRENT assign_expressions
   17                   | unary_expression And_CURRENT assign_expressions
   18                   | unary_expression Xor_CURRENT assign_expressions
   19                   | unary_expression Or_CURRENT assign_expressions
   20                   | unary_expression LShift_CURRENT assign_expressions
   21                   | unary_expression RShift_CURRENT assign_expressions
   22                   | OCurly_BRACKET argument_expression_list CCurly_BRACKET

   23 constant_expression: conditional_logical_or
   24                    | conditional_logical_or Question_BIT expression Colon constant_expression

   25 argument_expression_list: assign_expressions
   26                         | argument_expression_list Comma assign_expressions

   27 function_definition: all_type_specifiers IDENTIFIER Open_BRACKET parameter_type_list Close_BRACKET compound_statement
   28                    | all_type_specifiers IDENTIFIER Open_BRACKET Close_BRACKET compound_statement
   29                    | IDENTIFIER Open_BRACKET parameter_type_list Close_BRACKET compound_statement
   30                    | IDENTIFIER Open_BRACKET Close_BRACKET compound_statement

   31 all_type_specifiers: storage_specifiers all_type_specifiers
   32                    | type_specifier
   33                    | type_specifier all_type_specifiers
   34                    | type_qualifier all_type_specifiers

   35 direct_declarator: Open_BRACKET declarator Close_BRACKET
   36                  | IDENTIFIER OSquare_BRACKET constant_expression CSquare_BRACKET
   37                  | IDENTIFIER OSquare_BRACKET CSquare_BRACKET
   38                  | IDENTIFIER Open_BRACKET parameter_type_list Close_BRACKET
   39                  | IDENTIFIER Open_BRACKET Close_BRACKET
   40                  | IDENTIFIER

   41 declarator: pointer direct_declarator
   42           | direct_declarator

   43 pointer: Multiply_MATH
   44        | Multiply_MATH specifier_qualifier_list
   45        | Multiply_MATH pointer
   46        | Multiply_MATH specifier_qualifier_list pointer

   47 declaration: all_type_specifiers Semicolon
   48            | all_type_specifiers initialisers_list Semicolon

   49 initialisers_list: initialisers_declarator
   50                  | initialisers_list Comma initialisers_declarator

   51 initialisers_declarator: declarator
   52                        | declarator Equal assign_expressions

   53 shift_expression: additive_expression
   54                 | shift_expression LShift_BIT additive_expression
   55                 | shift_expression RShift_BIT additive_expression

   56 additive_expression: multiplicative_expression
   57                    | additive_expression Plus_MATH multiplicative_expression
   58                    | additive_expression Subtract_MATH multiplicative_expression

   59 multiplicative_expression: cast_expression
   60                          | multiplicative_expression Multiply_MATH cast_expression
   61                          | multiplicative_expression Divide_MATH cast_expression
   62                          | multiplicative_expression Percentage_MATH cast_expression

   63 cast_expression: unary_expression
   64                | Open_BRACKET type_name Close_BRACKET cast_expression

   65 relational_expression: shift_expression
   66                      | relational_expression Less_COMP shift_expression
   67                      | relational_expression Greater_COMP shift_expression
   68                      | relational_expression LEqual_COMP shift_expression
   69                      | relational_expression GEqual_COMP shift_expression

   70 equality_expression: relational_expression
   71                    | equality_expression Equal_COMP relational_expression
   72                    | equality_expression NEqual_COMP relational_expression

   73 and_expression: equality_expression
   74               | and_expression And_BIT equality_expression

   75 exclusive_or_expression: and_expression
   76                        | exclusive_or_expression Xor_BIT and_expression

   77 inclusive_or_expression: exclusive_or_expression
   78                        | inclusive_or_expression Or_BIT exclusive_or_expression

   79 logical_and_expression: inclusive_or_expression
   80                       | logical_and_expression AndAnd_BIT inclusive_or_expression

   81 conditional_logical_or: logical_and_expression
   82                       | conditional_logical_or OrOr_BIT logical_and_expression

   83 primary_expression: NUMBER
   84                   | Char_literal
   85                   | Subtract_MATH primary_expression
   86                   | IDENTIFIER
   87                   | Open_BRACKET expression Close_BRACKET
   88                   | String_literal

   89 postfix_expression: primary_expression
   90                   | postfix_expression OSquare_BRACKET expression CSquare_BRACKET
   91                   | IDENTIFIER Open_BRACKET Close_BRACKET
   92                   | IDENTIFIER Open_BRACKET argument_expression_list Close_BRACKET
   93                   | primary_expression Dot_Ref IDENTIFIER
   94                   | IDENTIFIER Increment_MATH
   95                   | IDENTIFIER Decrement_MATH

   96 unary_expression: postfix_expression
   97                 | Increment_MATH IDENTIFIER
   98                 | Decrement_MATH IDENTIFIER
   99                 | unary_operator cast_expression
  100                 | Sizeof_KEY unary_expression
  101                 | Sizeof_KEY Open_BRACKET type_name Close_BRACKET

  102 type_name: specifier_qualifier_list
  103          | specifier_qualifier_list abstract_declarator

  104 specifier_qualifier_list: type_specifier
  105                         | type_qualifier specifier_qualifier_list
  106                         | type_qualifier

  107 abstract_declarator: Open_BRACKET abstract_declarator Close_BRACKET
  108                    | OSquare_BRACKET CSquare_BRACKET
  109                    | OSquare_BRACKET constant_expression CSquare_BRACKET
  110                    | abstract_declarator OSquare_BRACKET CSquare_BRACKET
  111                    | abstract_declarator OSquare_BRACKET constant_expression CSquare_BRACKET
  112                    | Open_BRACKET Close_BRACKET
  113                    | Open_BRACKET parameter_type_list Close_BRACKET

  114 parameter_type_list: parameter_list
  115                    | parameter_list Comma Ellipses

  116 parameter_list: parameter_list Comma parameter_declaration
  117               | parameter_declaration

  118 parameter_declaration: all_type_specifiers declarator
  119                      | all_type_specifiers

  120 statement: expression_statement
  121          | compound_statement
  122          | if_else_statement
  123          | for_while_statement
  124          | return_statement
  125          | declaration
  126          | labeled_statement
  127          | case_statement_list

  128 labeled_statement: IDENTIFIER Colon statement

  129 case_statement_list: case_statement_list Case_KEY constant_expression Colon statement
  130                    | case_statement_list Case_KEY Default_KEY Colon statement
  131                    | Case_KEY constant_expression Colon statement
  132                    | Default_KEY Colon statement

  133 if_else_statement: If_KEY Open_BRACKET expression Close_BRACKET statement
  134                  | If_KEY Open_BRACKET expression Close_BRACKET statement Else_KEY statement
  135                  | Switch_KEY Open_BRACKET expression Close_BRACKET statement

  136 for_while_statement: For_KEY Open_BRACKET expression Semicolon expression Semicolon Close_BRACKET statement
  137                    | For_KEY Open_BRACKET expression Semicolon expression Semicolon expression Close_BRACKET statement
  138                    | While_KEY Open_BRACKET expression Close_BRACKET statement
  139                    | Do_KEY statement While_KEY Open_BRACKET expression Close_BRACKET Semicolon

  140 return_statement: Return_KEY Semicolon
  141                 | Return_KEY expression Semicolon
  142                 | Break_KEY Semicolon
  143                 | Continue_KEY Semicolon

  144 expression_statement: Semicolon
  145                     | expression Semicolon

  146 compound_statement: OCurly_BRACKET CCurly_BRACKET
  147                   | OCurly_BRACKET statement_list CCurly_BRACKET

  148 statement_list: statement
  149               | statement_list statement

  150 storage_specifiers: Typedef_KEY
  151                   | Extern_KEY
  152                   | Static_KEY
  153                   | Auto_KEY
  154                   | Register_KEY

  155 type_specifier: Void_KEY
  156               | Char_KEY
  157               | Short_KEY
  158               | Int_KEY
  159               | Long_KEY
  160               | Float_KEY
  161               | Double_KEY
  162               | Signed_KEY
  163               | Unsigned_KEY
  164               | Struct_KEY
  165               | Enum_KEY
  166               | Typedef_KEY
  167               | String_KEY

  168 unary_operator: And_BIT
  169               | Multiply_MATH
  170               | Plus_MATH
  171               | Subtract_MATH
  172               | Tilde_BIT
  173               | Not_BIT

  174 type_qualifier: Const_KEY
  175               | Volatile_KEY


Terminals, with rules where they appear

$end (0) 0
error (256)
Continue_KEY (258) 143
String_KEY (259) 167
Default_KEY (260) 130 132
Short_KEY (261) 157
Goto_KEY (262)
If_KEY (263) 133 134
Extern_KEY (264) 151
Float_KEY (265) 160
Unsigned_KEY (266) 163
Void_KEY (267) 155
Long_KEY (268) 159
Volatile_KEY (269) 175
While_KEY (270) 138 139
Const_KEY (271) 174
Char_KEY (272) 156
For_KEY (273) 136 137
Auto_KEY (274) 153
Do_KEY (275) 139
Sizeof_KEY (276) 100 101
Union_KEY (277)
Double_KEY (278) 161
Int_KEY (279) 158
Typedef_KEY (280) 150 166
Else_KEY (281) 134
Return_KEY (282) 140 141
Static_KEY (283) 152
Enum_KEY (284) 165
Case_KEY (285) 129 130 131
Register_KEY (286) 154
Restrict_KEY (287)
Break_KEY (288) 142
Signed_KEY (289) 162
Switch_KEY (290) 135
Struct_KEY (291) 164
Plus_MATH (292) 57 170
Subtract_MATH (293) 58 85 171
Multiply_MATH (294) 43 44 45 46 60 169
Divide_MATH (295) 61
Percentage_MATH (296) 62
Increment_MATH (297) 94 97
Decrement_MATH (298) 95 98
And_BIT (299) 74 168
Or_BIT (300) 78
Xor_BIT (301) 76
Tilde_BIT (302) 172
Not_BIT (303) 173
AndAnd_BIT (304) 80
OrOr_BIT (305) 82
LShift_BIT (306) 54
RShift_BIT (307) 55
Question_BIT (308) 24
Less_COMP (309) 66
Greater_COMP (310) 67
Equal_COMP (311) 71
NEqual_COMP (312) 72
GEqual_COMP (313) 69
LEqual_COMP (314) 68
Open_BRACKET (315) 27 28 29 30 35 38 39 64 87 91 92 101 107 112 113
    133 134 135 136 137 138 139
Close_BRACKET (316) 27 28 29 30 35 38 39 64 87 91 92 101 107 112 113
    133 134 135 136 137 138 139
OSquare_BRACKET (317) 36 37 90 108 109 110 111
CSquare_BRACKET (318) 36 37 90 108 109 110 111
OCurly_BRACKET (319) 22 146 147
CCurly_BRACKET (320) 22 146 147
Add_CURRENT (321) 12
Sub_CURRENT (322) 13
Mul_CURRENT (323) 14
Div_CURRENT (324) 15
Mod_CURRENT (325) 16
And_CURRENT (326) 17
Xor_CURRENT (327) 18
Or_CURRENT (328) 19
LShift_CURRENT (329) 20
RShift_CURRENT (330) 21
Equal (331) 11 52
Ellipses (332) 115
Semicolon (333) 4 6 47 48 136 137 139 140 141 142 143 144 145
PTR_Ref (334)
Colon (335) 24 128 129 130 131 132
Comma (336) 9 26 50 115 116
Dot_Ref (337) 93
IDENTIFIER (338) 27 28 29 30 36 37 38 39 40 86 91 92 93 94 95 97 98
    128
String_literal (339) 88
NUMBER (340) 83
Char_literal (341) 84


Nonterminals, with rules where they appear

$accept (87)
    on left: 0
root (88)
    on left: 1, on right: 0
top_declaration (89)
    on left: 2 3 4 5 6 7, on right: 1 2 3 4
expression (90)
    on left: 8 9, on right: 9 24 87 90 133 134 135 136 137 138 139
    141 145
assign_expressions (91)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22, on right: 8 9
    11 12 13 14 15 16 17 18 19 20 21 25 26 52
constant_expression (92)
    on left: 23 24, on right: 10 24 36 109 111 129 131
argument_expression_list (93)
    on left: 25 26, on right: 22 26 92
function_definition (94)
    on left: 27 28 29 30, on right: 3 7
all_type_specifiers (95)
    on left: 31 32 33 34, on right: 27 28 31 33 34 47 48 118 119
direct_declarator (96)
    on left: 35 36 37 38 39 40, on right: 41 42
declarator (97)
    on left: 41 42, on right: 35 51 52 118
pointer (98)
    on left: 43 44 45 46, on right: 41 45 46
declaration (99)
    on left: 47 48, on right: 2 5 125
initialisers_list (100)
    on left: 49 50, on right: 48 50
initialisers_declarator (101)
    on left: 51 52, on right: 49 50
shift_expression (102)
    on left: 53 54 55, on right: 54 55 65 66 67 68 69
additive_expression (103)
    on left: 56 57 58, on right: 53 54 55 57 58
multiplicative_expression (104)
    on left: 59 60 61 62, on right: 56 57 58 60 61 62
cast_expression (105)
    on left: 63 64, on right: 59 60 61 62 64 99
relational_expression (106)
    on left: 65 66 67 68 69, on right: 66 67 68 69 70 71 72
equality_expression (107)
    on left: 70 71 72, on right: 71 72 73 74
and_expression (108)
    on left: 73 74, on right: 74 75 76
exclusive_or_expression (109)
    on left: 75 76, on right: 76 77 78
inclusive_or_expression (110)
    on left: 77 78, on right: 78 79 80
logical_and_expression (111)
    on left: 79 80, on right: 80 81 82
conditional_logical_or (112)
    on left: 81 82, on right: 23 24 82
primary_expression (113)
    on left: 83 84 85 86 87 88, on right: 85 89 93
postfix_expression (114)
    on left: 89 90 91 92 93 94 95, on right: 90 96
unary_expression (115)
    on left: 96 97 98 99 100 101, on right: 11 12 13 14 15 16 17 18
    19 20 21 63 100
type_name (116)
    on left: 102 103, on right: 64 101
specifier_qualifier_list (117)
    on left: 104 105 106, on right: 44 46 102 103 105
abstract_declarator (118)
    on left: 107 108 109 110 111 112 113, on right: 103 107 110 111
parameter_type_list (119)
    on left: 114 115, on right: 27 29 38 113
parameter_list (120)
    on left: 116 117, on right: 114 115 116
parameter_declaration (121)
    on left: 118 119, on right: 116 117
statement (122)
    on left: 120 121 122 123 124 125 126 127, on right: 128 129 130
    131 132 133 134 135 136 137 138 139 148 149
labeled_statement (123)
    on left: 128, on right: 126
case_statement_list (124)
    on left: 129 130 131 132, on right: 127 129 130
if_else_statement (125)
    on left: 133 134 135, on right: 122
for_while_statement (126)
    on left: 136 137 138 139, on right: 123
return_statement (127)
    on left: 140 141 142 143, on right: 124
expression_statement (128)
    on left: 144 145, on right: 120
compound_statement (129)
    on left: 146 147, on right: 27 28 29 30 121
statement_list (130)
    on left: 148 149, on right: 147 149
storage_specifiers (131)
    on left: 150 151 152 153 154, on right: 31
type_specifier (132)
    on left: 155 156 157 158 159 160 161 162 163 164 165 166 167, on right:
    32 33 104
unary_operator (133)
    on left: 168 169 170 171 172 173, on right: 99
type_qualifier (134)
    on left: 174 175, on right: 34 105 106


State 0

    0 $accept: . root $end

    String_KEY    shift, and go to state 1
    Short_KEY     shift, and go to state 2
    Extern_KEY    shift, and go to state 3
    Float_KEY     shift, and go to state 4
    Unsigned_KEY  shift, and go to state 5
    Void_KEY      shift, and go to state 6
    Long_KEY      shift, and go to state 7
    Volatile_KEY  shift, and go to state 8
    Const_KEY     shift, and go to state 9
    Char_KEY      shift, and go to state 10
    Auto_KEY      shift, and go to state 11
    Double_KEY    shift, and go to state 12
    Int_KEY       shift, and go to state 13
    Typedef_KEY   shift, and go to state 14
    Static_KEY    shift, and go to state 15
    Enum_KEY      shift, and go to state 16
    Register_KEY  shift, and go to state 17
    Signed_KEY    shift, and go to state 18
    Struct_KEY    shift, and go to state 19
    Semicolon     shift, and go to state 20
    IDENTIFIER    shift, and go to state 21

    root                 go to state 22
    top_declaration      go to state 23
    function_definition  go to state 24
    all_type_specifiers  go to state 25
    declaration          go to state 26
    storage_specifiers   go to state 27
    type_specifier       go to state 28
    type_qualifier       go to state 29


State 1

  167 type_specifier: String_KEY .

    $default  reduce using rule 167 (type_specifier)


State 2

  157 type_specifier: Short_KEY .

    $default  reduce using rule 157 (type_specifier)


State 3

  151 storage_specifiers: Extern_KEY .

    $default  reduce using rule 151 (storage_specifiers)


State 4

  160 type_specifier: Float_KEY .

    $default  reduce using rule 160 (type_specifier)


State 5

  163 type_specifier: Unsigned_KEY .

    $default  reduce using rule 163 (type_specifier)


State 6

  155 type_specifier: Void_KEY .

    $default  reduce using rule 155 (type_specifier)


State 7

  159 type_specifier: Long_KEY .

    $default  reduce using rule 159 (type_specifier)


State 8

  175 type_qualifier: Volatile_KEY .

    $default  reduce using rule 175 (type_qualifier)


State 9

  174 type_qualifier: Const_KEY .

    $default  reduce using rule 174 (type_qualifier)


State 10

  156 type_specifier: Char_KEY .

    $default  reduce using rule 156 (type_specifier)


State 11

  153 storage_specifiers: Auto_KEY .

    $default  reduce using rule 153 (storage_specifiers)


State 12

  161 type_specifier: Double_KEY .

    $default  reduce using rule 161 (type_specifier)


State 13

  158 type_specifier: Int_KEY .

    $default  reduce using rule 158 (type_specifier)


State 14

  150 storage_specifiers: Typedef_KEY .
  166 type_specifier: Typedef_KEY .

    String_KEY     reduce using rule 150 (storage_specifiers)
    String_KEY     [reduce using rule 166 (type_specifier)]
    Short_KEY      reduce using rule 150 (storage_specifiers)
    Short_KEY      [reduce using rule 166 (type_specifier)]
    Extern_KEY     reduce using rule 150 (storage_specifiers)
    Extern_KEY     [reduce using rule 166 (type_specifier)]
    Float_KEY      reduce using rule 150 (storage_specifiers)
    Float_KEY      [reduce using rule 166 (type_specifier)]
    Unsigned_KEY   reduce using rule 150 (storage_specifiers)
    Unsigned_KEY   [reduce using rule 166 (type_specifier)]
    Void_KEY       reduce using rule 150 (storage_specifiers)
    Void_KEY       [reduce using rule 166 (type_specifier)]
    Long_KEY       reduce using rule 150 (storage_specifiers)
    Long_KEY       [reduce using rule 166 (type_specifier)]
    Volatile_KEY   reduce using rule 150 (storage_specifiers)
    Volatile_KEY   [reduce using rule 166 (type_specifier)]
    Const_KEY      reduce using rule 150 (storage_specifiers)
    Const_KEY      [reduce using rule 166 (type_specifier)]
    Char_KEY       reduce using rule 150 (storage_specifiers)
    Char_KEY       [reduce using rule 166 (type_specifier)]
    Auto_KEY       reduce using rule 150 (storage_specifiers)
    Auto_KEY       [reduce using rule 166 (type_specifier)]
    Double_KEY     reduce using rule 150 (storage_specifiers)
    Double_KEY     [reduce using rule 166 (type_specifier)]
    Int_KEY        reduce using rule 150 (storage_specifiers)
    Int_KEY        [reduce using rule 166 (type_specifier)]
    Typedef_KEY    reduce using rule 150 (storage_specifiers)
    Typedef_KEY    [reduce using rule 166 (type_specifier)]
    Static_KEY     reduce using rule 150 (storage_specifiers)
    Static_KEY     [reduce using rule 166 (type_specifier)]
    Enum_KEY       reduce using rule 150 (storage_specifiers)
    Enum_KEY       [reduce using rule 166 (type_specifier)]
    Register_KEY   reduce using rule 150 (storage_specifiers)
    Register_KEY   [reduce using rule 166 (type_specifier)]
    Signed_KEY     reduce using rule 150 (storage_specifiers)
    Signed_KEY     [reduce using rule 166 (type_specifier)]
    Struct_KEY     reduce using rule 150 (storage_specifiers)
    Struct_KEY     [reduce using rule 166 (type_specifier)]
    Multiply_MATH  reduce using rule 166 (type_specifier)
    Open_BRACKET   reduce using rule 166 (type_specifier)
    Close_BRACKET  reduce using rule 166 (type_specifier)
    Semicolon      reduce using rule 166 (type_specifier)
    Comma          reduce using rule 166 (type_specifier)
    IDENTIFIER     reduce using rule 166 (type_specifier)
    $default       reduce using rule 150 (storage_specifiers)


State 15

  152 storage_specifiers: Static_KEY .

    $default  reduce using rule 152 (storage_specifiers)


State 16

  165 type_specifier: Enum_KEY .

    $default  reduce using rule 165 (type_specifier)


State 17

  154 storage_specifiers: Register_KEY .

    $default  reduce using rule 154 (storage_specifiers)


State 18

  162 type_specifier: Signed_KEY .

    $default  reduce using rule 162 (type_specifier)


State 19

  164 type_specifier: Struct_KEY .

    $default  reduce using rule 164 (type_specifier)


State 20

    6 top_declaration: Semicolon .

    $default  reduce using rule 6 (top_declaration)


State 21

   29 function_definition: IDENTIFIER . Open_BRACKET parameter_type_list Close_BRACKET compound_statement
   30                    | IDENTIFIER . Open_BRACKET Close_BRACKET compound_statement

    Open_BRACKET  shift, and go to state 30


State 22

    0 $accept: root . $end

    $end  shift, and go to state 31


State 23

    1 root: top_declaration .
    2 top_declaration: top_declaration . declaration
    3                | top_declaration . function_definition
    4                | top_declaration . Semicolon

    String_KEY    shift, and go to state 1
    Short_KEY     shift, and go to state 2
    Extern_KEY    shift, and go to state 3
    Float_KEY     shift, and go to state 4
    Unsigned_KEY  shift, and go to state 5
    Void_KEY      shift, and go to state 6
    Long_KEY      shift, and go to state 7
    Volatile_KEY  shift, and go to state 8
    Const_KEY     shift, and go to state 9
    Char_KEY      shift, and go to state 10
    Auto_KEY      shift, and go to state 11
    Double_KEY    shift, and go to state 12
    Int_KEY       shift, and go to state 13
    Typedef_KEY   shift, and go to state 14
    Static_KEY    shift, and go to state 15
    Enum_KEY      shift, and go to state 16
    Register_KEY  shift, and go to state 17
    Signed_KEY    shift, and go to state 18
    Struct_KEY    shift, and go to state 19
    Semicolon     shift, and go to state 32
    IDENTIFIER    shift, and go to state 21

    $default  reduce using rule 1 (root)

    function_definition  go to state 33
    all_type_specifiers  go to state 25
    declaration          go to state 34
    storage_specifiers   go to state 27
    type_specifier       go to state 28
    type_qualifier       go to state 29


State 24

    7 top_declaration: function_definition .

    $default  reduce using rule 7 (top_declaration)


State 25

   27 function_definition: all_type_specifiers . IDENTIFIER Open_BRACKET parameter_type_list Close_BRACKET compound_statement
   28                    | all_type_specifiers . IDENTIFIER Open_BRACKET Close_BRACKET compound_statement
   47 declaration: all_type_specifiers . Semicolon
   48            | all_type_specifiers . initialisers_list Semicolon

    Multiply_MATH  shift, and go to state 35
    Open_BRACKET   shift, and go to state 36
    Semicolon      shift, and go to state 37
    IDENTIFIER     shift, and go to state 38

    direct_declarator        go to state 39
    declarator               go to state 40
    pointer                  go to state 41
    initialisers_list        go to state 42
    initialisers_declarator  go to state 43


State 26

    5 top_declaration: declaration .

    $default  reduce using rule 5 (top_declaration)


State 27

   31 all_type_specifiers: storage_specifiers . all_type_specifiers

    String_KEY    shift, and go to state 1
    Short_KEY     shift, and go to state 2
    Extern_KEY    shift, and go to state 3
    Float_KEY     shift, and go to state 4
    Unsigned_KEY  shift, and go to state 5
    Void_KEY      shift, and go to state 6
    Long_KEY      shift, and go to state 7
    Volatile_KEY  shift, and go to state 8
    Const_KEY     shift, and go to state 9
    Char_KEY      shift, and go to state 10
    Auto_KEY      shift, and go to state 11
    Double_KEY    shift, and go to state 12
    Int_KEY       shift, and go to state 13
    Typedef_KEY   shift, and go to state 14
    Static_KEY    shift, and go to state 15
    Enum_KEY      shift, and go to state 16
    Register_KEY  shift, and go to state 17
    Signed_KEY    shift, and go to state 18
    Struct_KEY    shift, and go to state 19

    all_type_specifiers  go to state 44
    storage_specifiers   go to state 27
    type_specifier       go to state 28
    type_qualifier       go to state 29


State 28

   32 all_type_specifiers: type_specifier .
   33                    | type_specifier . all_type_specifiers

    String_KEY    shift, and go to state 1
    Short_KEY     shift, and go to state 2
    Extern_KEY    shift, and go to state 3
    Float_KEY     shift, and go to state 4
    Unsigned_KEY  shift, and go to state 5
    Void_KEY      shift, and go to state 6
    Long_KEY      shift, and go to state 7
    Volatile_KEY  shift, and go to state 8
    Const_KEY     shift, and go to state 9
    Char_KEY      shift, and go to state 10
    Auto_KEY      shift, and go to state 11
    Double_KEY    shift, and go to state 12
    Int_KEY       shift, and go to state 13
    Typedef_KEY   shift, and go to state 14
    Static_KEY    shift, and go to state 15
    Enum_KEY      shift, and go to state 16
    Register_KEY  shift, and go to state 17
    Signed_KEY    shift, and go to state 18
    Struct_KEY    shift, and go to state 19

    $default  reduce using rule 32 (all_type_specifiers)

    all_type_specifiers  go to state 45
    storage_specifiers   go to state 27
    type_specifier       go to state 28
    type_qualifier       go to state 29


State 29

   34 all_type_specifiers: type_qualifier . all_type_specifiers

    String_KEY    shift, and go to state 1
    Short_KEY     shift, and go to state 2
    Extern_KEY    shift, and go to state 3
    Float_KEY     shift, and go to state 4
    Unsigned_KEY  shift, and go to state 5
    Void_KEY      shift, and go to state 6
    Long_KEY      shift, and go to state 7
    Volatile_KEY  shift, and go to state 8
    Const_KEY     shift, and go to state 9
    Char_KEY      shift, and go to state 10
    Auto_KEY      shift, and go to state 11
    Double_KEY    shift, and go to state 12
    Int_KEY       shift, and go to state 13
    Typedef_KEY   shift, and go to state 14
    Static_KEY    shift, and go to state 15
    Enum_KEY      shift, and go to state 16
    Register_KEY  shift, and go to state 17
    Signed_KEY    shift, and go to state 18
    Struct_KEY    shift, and go to state 19

    all_type_specifiers  go to state 46
    storage_specifiers   go to state 27
    type_specifier       go to state 28
    type_qualifier       go to state 29


State 30

   29 function_definition: IDENTIFIER Open_BRACKET . parameter_type_list Close_BRACKET compound_statement
   30                    | IDENTIFIER Open_BRACKET . Close_BRACKET compound_statement

    String_KEY     shift, and go to state 1
    Short_KEY      shift, and go to state 2
    Extern_KEY     shift, and go to state 3
    Float_KEY      shift, and go to state 4
    Unsigned_KEY   shift, and go to state 5
    Void_KEY       shift, and go to state 6
    Long_KEY       shift, and go to state 7
    Volatile_KEY   shift, and go to state 8
    Const_KEY      shift, and go to state 9
    Char_KEY       shift, and go to state 10
    Auto_KEY       shift, and go to state 11
    Double_KEY     shift, and go to state 12
    Int_KEY        shift, and go to state 13
    Typedef_KEY    shift, and go to state 14
    Static_KEY     shift, and go to state 15
    Enum_KEY       shift, and go to state 16
    Register_KEY   shift, and go to state 17
    Signed_KEY     shift, and go to state 18
    Struct_KEY     shift, and go to state 19
    Close_BRACKET  shift, and go to state 47

    all_type_specifiers    go to state 48
    parameter_type_list    go to state 49
    parameter_list         go to state 50
    parameter_declaration  go to state 51
    storage_specifiers     go to state 27
    type_specifier         go to state 28
    type_qualifier         go to state 29


State 31

    0 $accept: root $end .

    $default  accept


State 32

    4 top_declaration: top_declaration Semicolon .

    $default  reduce using rule 4 (top_declaration)


State 33

    3 top_declaration: top_declaration function_definition .

    $default  reduce using rule 3 (top_declaration)


State 34

    2 top_declaration: top_declaration declaration .

    $default  reduce using rule 2 (top_declaration)


State 35

   43 pointer: Multiply_MATH .
   44        | Multiply_MATH . specifier_qualifier_list
   45        | Multiply_MATH . pointer
   46        | Multiply_MATH . specifier_qualifier_list pointer

    String_KEY     shift, and go to state 1
    Short_KEY      shift, and go to state 2
    Float_KEY      shift, and go to state 4
    Unsigned_KEY   shift, and go to state 5
    Void_KEY       shift, and go to state 6
    Long_KEY       shift, and go to state 7
    Volatile_KEY   shift, and go to state 8
    Const_KEY      shift, and go to state 9
    Char_KEY       shift, and go to state 10
    Double_KEY     shift, and go to state 12
    Int_KEY        shift, and go to state 13
    Typedef_KEY    shift, and go to state 52
    Enum_KEY       shift, and go to state 16
    Signed_KEY     shift, and go to state 18
    Struct_KEY     shift, and go to state 19
    Multiply_MATH  shift, and go to state 35

    $default  reduce using rule 43 (pointer)

    pointer                   go to state 53
    specifier_qualifier_list  go to state 54
    type_specifier            go to state 55
    type_qualifier            go to state 56


State 36

   35 direct_declarator: Open_BRACKET . declarator Close_BRACKET

    Multiply_MATH  shift, and go to state 35
    Open_BRACKET   shift, and go to state 36
    IDENTIFIER     shift, and go to state 57

    direct_declarator  go to state 39
    declarator         go to state 58
    pointer            go to state 41


State 37

   47 declaration: all_type_specifiers Semicolon .

    $default  reduce using rule 47 (declaration)


State 38

   27 function_definition: all_type_specifiers IDENTIFIER . Open_BRACKET parameter_type_list Close_BRACKET compound_statement
   28                    | all_type_specifiers IDENTIFIER . Open_BRACKET Close_BRACKET compound_statement
   36 direct_declarator: IDENTIFIER . OSquare_BRACKET constant_expression CSquare_BRACKET
   37                  | IDENTIFIER . OSquare_BRACKET CSquare_BRACKET
   38                  | IDENTIFIER . Open_BRACKET parameter_type_list Close_BRACKET
   39                  | IDENTIFIER . Open_BRACKET Close_BRACKET
   40                  | IDENTIFIER .

    Open_BRACKET     shift, and go to state 59
    OSquare_BRACKET  shift, and go to state 60

    $default  reduce using rule 40 (direct_declarator)


State 39

   42 declarator: direct_declarator .

    $default  reduce using rule 42 (declarator)


State 40

   51 initialisers_declarator: declarator .
   52                        | declarator . Equal assign_expressions

    Equal  shift, and go to state 61

    $default  reduce using rule 51 (initialisers_declarator)


State 41

   41 declarator: pointer . direct_declarator

    Open_BRACKET  shift, and go to state 36
    IDENTIFIER    shift, and go to state 57

    direct_declarator  go to state 62


State 42

   48 declaration: all_type_specifiers initialisers_list . Semicolon
   50 initialisers_list: initialisers_list . Comma initialisers_declarator

    Semicolon  shift, and go to state 63
    Comma      shift, and go to state 64


State 43

   49 initialisers_list: initialisers_declarator .

    $default  reduce using rule 49 (initialisers_list)


State 44

   31 all_type_specifiers: storage_specifiers all_type_specifiers .

    $default  reduce using rule 31 (all_type_specifiers)


State 45

   33 all_type_specifiers: type_specifier all_type_specifiers .

    $default  reduce using rule 33 (all_type_specifiers)


State 46

   34 all_type_specifiers: type_qualifier all_type_specifiers .

    $default  reduce using rule 34 (all_type_specifiers)


State 47

   30 function_definition: IDENTIFIER Open_BRACKET Close_BRACKET . compound_statement

    OCurly_BRACKET  shift, and go to state 65

    compound_statement  go to state 66


State 48

  118 parameter_declaration: all_type_specifiers . declarator
  119                      | all_type_specifiers .

    Multiply_MATH  shift, and go to state 35
    Open_BRACKET   shift, and go to state 36
    IDENTIFIER     shift, and go to state 57

    $default  reduce using rule 119 (parameter_declaration)

    direct_declarator  go to state 39
    declarator         go to state 67
    pointer            go to state 41


State 49

   29 function_definition: IDENTIFIER Open_BRACKET parameter_type_list . Close_BRACKET compound_statement

    Close_BRACKET  shift, and go to state 68


State 50

  114 parameter_type_list: parameter_list .
  115                    | parameter_list . Comma Ellipses
  116 parameter_list: parameter_list . Comma parameter_declaration

    Comma  shift, and go to state 69

    $default  reduce using rule 114 (parameter_type_list)


State 51

  117 parameter_list: parameter_declaration .

    $default  reduce using rule 117 (parameter_list)


State 52

  166 type_specifier: Typedef_KEY .

    $default  reduce using rule 166 (type_specifier)


State 53

   45 pointer: Multiply_MATH pointer .

    $default  reduce using rule 45 (pointer)


State 54

   44 pointer: Multiply_MATH specifier_qualifier_list .
   46        | Multiply_MATH specifier_qualifier_list . pointer

    Multiply_MATH  shift, and go to state 35

    $default  reduce using rule 44 (pointer)

    pointer  go to state 70


State 55

  104 specifier_qualifier_list: type_specifier .

    $default  reduce using rule 104 (specifier_qualifier_list)


State 56

  105 specifier_qualifier_list: type_qualifier . specifier_qualifier_list
  106                         | type_qualifier .

    String_KEY    shift, and go to state 1
    Short_KEY     shift, and go to state 2
    Float_KEY     shift, and go to state 4
    Unsigned_KEY  shift, and go to state 5
    Void_KEY      shift, and go to state 6
    Long_KEY      shift, and go to state 7
    Volatile_KEY  shift, and go to state 8
    Const_KEY     shift, and go to state 9
    Char_KEY      shift, and go to state 10
    Double_KEY    shift, and go to state 12
    Int_KEY       shift, and go to state 13
    Typedef_KEY   shift, and go to state 52
    Enum_KEY      shift, and go to state 16
    Signed_KEY    shift, and go to state 18
    Struct_KEY    shift, and go to state 19

    $default  reduce using rule 106 (specifier_qualifier_list)

    specifier_qualifier_list  go to state 71
    type_specifier            go to state 55
    type_qualifier            go to state 56


State 57

   36 direct_declarator: IDENTIFIER . OSquare_BRACKET constant_expression CSquare_BRACKET
   37                  | IDENTIFIER . OSquare_BRACKET CSquare_BRACKET
   38                  | IDENTIFIER . Open_BRACKET parameter_type_list Close_BRACKET
   39                  | IDENTIFIER . Open_BRACKET Close_BRACKET
   40                  | IDENTIFIER .

    Open_BRACKET     shift, and go to state 72
    OSquare_BRACKET  shift, and go to state 60

    $default  reduce using rule 40 (direct_declarator)


State 58

   35 direct_declarator: Open_BRACKET declarator . Close_BRACKET

    Close_BRACKET  shift, and go to state 73


State 59

   27 function_definition: all_type_specifiers IDENTIFIER Open_BRACKET . parameter_type_list Close_BRACKET compound_statement
   28                    | all_type_specifiers IDENTIFIER Open_BRACKET . Close_BRACKET compound_statement
   38 direct_declarator: IDENTIFIER Open_BRACKET . parameter_type_list Close_BRACKET
   39                  | IDENTIFIER Open_BRACKET . Close_BRACKET

    String_KEY     shift, and go to state 1
    Short_KEY      shift, and go to state 2
    Extern_KEY     shift, and go to state 3
    Float_KEY      shift, and go to state 4
    Unsigned_KEY   shift, and go to state 5
    Void_KEY       shift, and go to state 6
    Long_KEY       shift, and go to state 7
    Volatile_KEY   shift, and go to state 8
    Const_KEY      shift, and go to state 9
    Char_KEY       shift, and go to state 10
    Auto_KEY       shift, and go to state 11
    Double_KEY     shift, and go to state 12
    Int_KEY        shift, and go to state 13
    Typedef_KEY    shift, and go to state 14
    Static_KEY     shift, and go to state 15
    Enum_KEY       shift, and go to state 16
    Register_KEY   shift, and go to state 17
    Signed_KEY     shift, and go to state 18
    Struct_KEY     shift, and go to state 19
    Close_BRACKET  shift, and go to state 74

    all_type_specifiers    go to state 48
    parameter_type_list    go to state 75
    parameter_list         go to state 50
    parameter_declaration  go to state 51
    storage_specifiers     go to state 27
    type_specifier         go to state 28
    type_qualifier         go to state 29


State 60

   36 direct_declarator: IDENTIFIER OSquare_BRACKET . constant_expression CSquare_BRACKET
   37                  | IDENTIFIER OSquare_BRACKET . CSquare_BRACKET

    Sizeof_KEY       shift, and go to state 76
    Plus_MATH        shift, and go to state 77
    Subtract_MATH    shift, and go to state 78
    Multiply_MATH    shift, and go to state 79
    Increment_MATH   shift, and go to state 80
    Decrement_MATH   shift, and go to state 81
    And_BIT          shift, and go to state 82
    Tilde_BIT        shift, and go to state 83
    Not_BIT          shift, and go to state 84
    Open_BRACKET     shift, and go to state 85
    CSquare_BRACKET  shift, and go to state 86
    IDENTIFIER       shift, and go to state 87
    String_literal   shift, and go to state 88
    NUMBER           shift, and go to state 89
    Char_literal     shift, and go to state 90

    constant_expression        go to state 91
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 61

   52 initialisers_declarator: declarator Equal . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 108
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 62

   41 declarator: pointer direct_declarator .

    $default  reduce using rule 41 (declarator)


State 63

   48 declaration: all_type_specifiers initialisers_list Semicolon .

    $default  reduce using rule 48 (declaration)


State 64

   50 initialisers_list: initialisers_list Comma . initialisers_declarator

    Multiply_MATH  shift, and go to state 35
    Open_BRACKET   shift, and go to state 36
    IDENTIFIER     shift, and go to state 57

    direct_declarator        go to state 39
    declarator               go to state 40
    pointer                  go to state 41
    initialisers_declarator  go to state 111


State 65

  146 compound_statement: OCurly_BRACKET . CCurly_BRACKET
  147                   | OCurly_BRACKET . statement_list CCurly_BRACKET

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    CCurly_BRACKET  shift, and go to state 123
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 130
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    statement_list             go to state 138
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 66

   30 function_definition: IDENTIFIER Open_BRACKET Close_BRACKET compound_statement .

    $default  reduce using rule 30 (function_definition)


State 67

  118 parameter_declaration: all_type_specifiers declarator .

    $default  reduce using rule 118 (parameter_declaration)


State 68

   29 function_definition: IDENTIFIER Open_BRACKET parameter_type_list Close_BRACKET . compound_statement

    OCurly_BRACKET  shift, and go to state 65

    compound_statement  go to state 139


State 69

  115 parameter_type_list: parameter_list Comma . Ellipses
  116 parameter_list: parameter_list Comma . parameter_declaration

    String_KEY    shift, and go to state 1
    Short_KEY     shift, and go to state 2
    Extern_KEY    shift, and go to state 3
    Float_KEY     shift, and go to state 4
    Unsigned_KEY  shift, and go to state 5
    Void_KEY      shift, and go to state 6
    Long_KEY      shift, and go to state 7
    Volatile_KEY  shift, and go to state 8
    Const_KEY     shift, and go to state 9
    Char_KEY      shift, and go to state 10
    Auto_KEY      shift, and go to state 11
    Double_KEY    shift, and go to state 12
    Int_KEY       shift, and go to state 13
    Typedef_KEY   shift, and go to state 14
    Static_KEY    shift, and go to state 15
    Enum_KEY      shift, and go to state 16
    Register_KEY  shift, and go to state 17
    Signed_KEY    shift, and go to state 18
    Struct_KEY    shift, and go to state 19
    Ellipses      shift, and go to state 140

    all_type_specifiers    go to state 48
    parameter_declaration  go to state 141
    storage_specifiers     go to state 27
    type_specifier         go to state 28
    type_qualifier         go to state 29


State 70

   46 pointer: Multiply_MATH specifier_qualifier_list pointer .

    $default  reduce using rule 46 (pointer)


State 71

  105 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 105 (specifier_qualifier_list)


State 72

   38 direct_declarator: IDENTIFIER Open_BRACKET . parameter_type_list Close_BRACKET
   39                  | IDENTIFIER Open_BRACKET . Close_BRACKET

    String_KEY     shift, and go to state 1
    Short_KEY      shift, and go to state 2
    Extern_KEY     shift, and go to state 3
    Float_KEY      shift, and go to state 4
    Unsigned_KEY   shift, and go to state 5
    Void_KEY       shift, and go to state 6
    Long_KEY       shift, and go to state 7
    Volatile_KEY   shift, and go to state 8
    Const_KEY      shift, and go to state 9
    Char_KEY       shift, and go to state 10
    Auto_KEY       shift, and go to state 11
    Double_KEY     shift, and go to state 12
    Int_KEY        shift, and go to state 13
    Typedef_KEY    shift, and go to state 14
    Static_KEY     shift, and go to state 15
    Enum_KEY       shift, and go to state 16
    Register_KEY   shift, and go to state 17
    Signed_KEY     shift, and go to state 18
    Struct_KEY     shift, and go to state 19
    Close_BRACKET  shift, and go to state 142

    all_type_specifiers    go to state 48
    parameter_type_list    go to state 143
    parameter_list         go to state 50
    parameter_declaration  go to state 51
    storage_specifiers     go to state 27
    type_specifier         go to state 28
    type_qualifier         go to state 29


State 73

   35 direct_declarator: Open_BRACKET declarator Close_BRACKET .

    $default  reduce using rule 35 (direct_declarator)


State 74

   28 function_definition: all_type_specifiers IDENTIFIER Open_BRACKET Close_BRACKET . compound_statement
   39 direct_declarator: IDENTIFIER Open_BRACKET Close_BRACKET .

    OCurly_BRACKET  shift, and go to state 65

    $default  reduce using rule 39 (direct_declarator)

    compound_statement  go to state 144


State 75

   27 function_definition: all_type_specifiers IDENTIFIER Open_BRACKET parameter_type_list . Close_BRACKET compound_statement
   38 direct_declarator: IDENTIFIER Open_BRACKET parameter_type_list . Close_BRACKET

    Close_BRACKET  shift, and go to state 145


State 76

  100 unary_expression: Sizeof_KEY . unary_expression
  101                 | Sizeof_KEY . Open_BRACKET type_name Close_BRACKET

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 146
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 147
    unary_operator      go to state 106


State 77

  170 unary_operator: Plus_MATH .

    $default  reduce using rule 170 (unary_operator)


State 78

   85 primary_expression: Subtract_MATH . primary_expression
  171 unary_operator: Subtract_MATH .

    Subtract_MATH   shift, and go to state 148
    Open_BRACKET    shift, and go to state 149
    IDENTIFIER      shift, and go to state 150
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    Subtract_MATH   [reduce using rule 171 (unary_operator)]
    Open_BRACKET    [reduce using rule 171 (unary_operator)]
    IDENTIFIER      [reduce using rule 171 (unary_operator)]
    String_literal  [reduce using rule 171 (unary_operator)]
    NUMBER          [reduce using rule 171 (unary_operator)]
    Char_literal    [reduce using rule 171 (unary_operator)]
    $default        reduce using rule 171 (unary_operator)

    primary_expression  go to state 151


State 79

  169 unary_operator: Multiply_MATH .

    $default  reduce using rule 169 (unary_operator)


State 80

   97 unary_expression: Increment_MATH . IDENTIFIER

    IDENTIFIER  shift, and go to state 152


State 81

   98 unary_expression: Decrement_MATH . IDENTIFIER

    IDENTIFIER  shift, and go to state 153


State 82

  168 unary_operator: And_BIT .

    $default  reduce using rule 168 (unary_operator)


State 83

  172 unary_operator: Tilde_BIT .

    $default  reduce using rule 172 (unary_operator)


State 84

  173 unary_operator: Not_BIT .

    $default  reduce using rule 173 (unary_operator)


State 85

   64 cast_expression: Open_BRACKET . type_name Close_BRACKET cast_expression
   87 primary_expression: Open_BRACKET . expression Close_BRACKET

    String_KEY      shift, and go to state 1
    Short_KEY       shift, and go to state 2
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 52
    Enum_KEY        shift, and go to state 16
    Signed_KEY      shift, and go to state 18
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 154
    assign_expressions         go to state 127
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    type_name                  go to state 155
    specifier_qualifier_list   go to state 156
    type_specifier             go to state 55
    unary_operator             go to state 106
    type_qualifier             go to state 56


State 86

   37 direct_declarator: IDENTIFIER OSquare_BRACKET CSquare_BRACKET .

    $default  reduce using rule 37 (direct_declarator)


State 87

   86 primary_expression: IDENTIFIER .
   91 postfix_expression: IDENTIFIER . Open_BRACKET Close_BRACKET
   92                   | IDENTIFIER . Open_BRACKET argument_expression_list Close_BRACKET
   94                   | IDENTIFIER . Increment_MATH
   95                   | IDENTIFIER . Decrement_MATH

    Increment_MATH  shift, and go to state 157
    Decrement_MATH  shift, and go to state 158
    Open_BRACKET    shift, and go to state 159

    $default  reduce using rule 86 (primary_expression)


State 88

   88 primary_expression: String_literal .

    $default  reduce using rule 88 (primary_expression)


State 89

   83 primary_expression: NUMBER .

    $default  reduce using rule 83 (primary_expression)


State 90

   84 primary_expression: Char_literal .

    $default  reduce using rule 84 (primary_expression)


State 91

   36 direct_declarator: IDENTIFIER OSquare_BRACKET constant_expression . CSquare_BRACKET

    CSquare_BRACKET  shift, and go to state 160


State 92

   54 shift_expression: shift_expression . LShift_BIT additive_expression
   55                 | shift_expression . RShift_BIT additive_expression
   65 relational_expression: shift_expression .

    LShift_BIT  shift, and go to state 161
    RShift_BIT  shift, and go to state 162

    $default  reduce using rule 65 (relational_expression)


State 93

   53 shift_expression: additive_expression .
   57 additive_expression: additive_expression . Plus_MATH multiplicative_expression
   58                    | additive_expression . Subtract_MATH multiplicative_expression

    Plus_MATH      shift, and go to state 163
    Subtract_MATH  shift, and go to state 164

    $default  reduce using rule 53 (shift_expression)


State 94

   56 additive_expression: multiplicative_expression .
   60 multiplicative_expression: multiplicative_expression . Multiply_MATH cast_expression
   61                          | multiplicative_expression . Divide_MATH cast_expression
   62                          | multiplicative_expression . Percentage_MATH cast_expression

    Multiply_MATH    shift, and go to state 165
    Divide_MATH      shift, and go to state 166
    Percentage_MATH  shift, and go to state 167

    $default  reduce using rule 56 (additive_expression)


State 95

   59 multiplicative_expression: cast_expression .

    $default  reduce using rule 59 (multiplicative_expression)


State 96

   66 relational_expression: relational_expression . Less_COMP shift_expression
   67                      | relational_expression . Greater_COMP shift_expression
   68                      | relational_expression . LEqual_COMP shift_expression
   69                      | relational_expression . GEqual_COMP shift_expression
   70 equality_expression: relational_expression .

    Less_COMP     shift, and go to state 168
    Greater_COMP  shift, and go to state 169
    GEqual_COMP   shift, and go to state 170
    LEqual_COMP   shift, and go to state 171

    $default  reduce using rule 70 (equality_expression)


State 97

   71 equality_expression: equality_expression . Equal_COMP relational_expression
   72                    | equality_expression . NEqual_COMP relational_expression
   73 and_expression: equality_expression .

    Equal_COMP   shift, and go to state 172
    NEqual_COMP  shift, and go to state 173

    $default  reduce using rule 73 (and_expression)


State 98

   74 and_expression: and_expression . And_BIT equality_expression
   75 exclusive_or_expression: and_expression .

    And_BIT  shift, and go to state 174

    $default  reduce using rule 75 (exclusive_or_expression)


State 99

   76 exclusive_or_expression: exclusive_or_expression . Xor_BIT and_expression
   77 inclusive_or_expression: exclusive_or_expression .

    Xor_BIT  shift, and go to state 175

    $default  reduce using rule 77 (inclusive_or_expression)


State 100

   78 inclusive_or_expression: inclusive_or_expression . Or_BIT exclusive_or_expression
   79 logical_and_expression: inclusive_or_expression .

    Or_BIT  shift, and go to state 176

    $default  reduce using rule 79 (logical_and_expression)


State 101

   80 logical_and_expression: logical_and_expression . AndAnd_BIT inclusive_or_expression
   81 conditional_logical_or: logical_and_expression .

    AndAnd_BIT  shift, and go to state 177

    $default  reduce using rule 81 (conditional_logical_or)


State 102

   23 constant_expression: conditional_logical_or .
   24                    | conditional_logical_or . Question_BIT expression Colon constant_expression
   82 conditional_logical_or: conditional_logical_or . OrOr_BIT logical_and_expression

    OrOr_BIT      shift, and go to state 178
    Question_BIT  shift, and go to state 179

    $default  reduce using rule 23 (constant_expression)


State 103

   89 postfix_expression: primary_expression .
   93                   | primary_expression . Dot_Ref IDENTIFIER

    Dot_Ref  shift, and go to state 180

    $default  reduce using rule 89 (postfix_expression)


State 104

   90 postfix_expression: postfix_expression . OSquare_BRACKET expression CSquare_BRACKET
   96 unary_expression: postfix_expression .

    OSquare_BRACKET  shift, and go to state 181

    $default  reduce using rule 96 (unary_expression)


State 105

   63 cast_expression: unary_expression .

    $default  reduce using rule 63 (cast_expression)


State 106

   99 unary_expression: unary_operator . cast_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    cast_expression     go to state 182
    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 105
    unary_operator      go to state 106


State 107

   22 assign_expressions: OCurly_BRACKET . argument_expression_list CCurly_BRACKET

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 183
    constant_expression        go to state 109
    argument_expression_list   go to state 184
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 108

   52 initialisers_declarator: declarator Equal assign_expressions .

    $default  reduce using rule 52 (initialisers_declarator)


State 109

   10 assign_expressions: constant_expression .

    $default  reduce using rule 10 (assign_expressions)


State 110

   11 assign_expressions: unary_expression . Equal assign_expressions
   12                   | unary_expression . Add_CURRENT assign_expressions
   13                   | unary_expression . Sub_CURRENT assign_expressions
   14                   | unary_expression . Mul_CURRENT assign_expressions
   15                   | unary_expression . Div_CURRENT assign_expressions
   16                   | unary_expression . Mod_CURRENT assign_expressions
   17                   | unary_expression . And_CURRENT assign_expressions
   18                   | unary_expression . Xor_CURRENT assign_expressions
   19                   | unary_expression . Or_CURRENT assign_expressions
   20                   | unary_expression . LShift_CURRENT assign_expressions
   21                   | unary_expression . RShift_CURRENT assign_expressions
   63 cast_expression: unary_expression .

    Add_CURRENT     shift, and go to state 185
    Sub_CURRENT     shift, and go to state 186
    Mul_CURRENT     shift, and go to state 187
    Div_CURRENT     shift, and go to state 188
    Mod_CURRENT     shift, and go to state 189
    And_CURRENT     shift, and go to state 190
    Xor_CURRENT     shift, and go to state 191
    Or_CURRENT      shift, and go to state 192
    LShift_CURRENT  shift, and go to state 193
    RShift_CURRENT  shift, and go to state 194
    Equal           shift, and go to state 195

    $default  reduce using rule 63 (cast_expression)


State 111

   50 initialisers_list: initialisers_list Comma initialisers_declarator .

    $default  reduce using rule 50 (initialisers_list)


State 112

  143 return_statement: Continue_KEY . Semicolon

    Semicolon  shift, and go to state 196


State 113

  132 case_statement_list: Default_KEY . Colon statement

    Colon  shift, and go to state 197


State 114

  133 if_else_statement: If_KEY . Open_BRACKET expression Close_BRACKET statement
  134                  | If_KEY . Open_BRACKET expression Close_BRACKET statement Else_KEY statement

    Open_BRACKET  shift, and go to state 198


State 115

  138 for_while_statement: While_KEY . Open_BRACKET expression Close_BRACKET statement

    Open_BRACKET  shift, and go to state 199


State 116

  136 for_while_statement: For_KEY . Open_BRACKET expression Semicolon expression Semicolon Close_BRACKET statement
  137                    | For_KEY . Open_BRACKET expression Semicolon expression Semicolon expression Close_BRACKET statement

    Open_BRACKET  shift, and go to state 200


State 117

  139 for_while_statement: Do_KEY . statement While_KEY Open_BRACKET expression Close_BRACKET Semicolon

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 201
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 118

  140 return_statement: Return_KEY . Semicolon
  141                 | Return_KEY . expression Semicolon

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    Semicolon       shift, and go to state 202
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 203
    assign_expressions         go to state 127
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 119

  131 case_statement_list: Case_KEY . constant_expression Colon statement

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    constant_expression        go to state 204
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 120

  142 return_statement: Break_KEY . Semicolon

    Semicolon  shift, and go to state 205


State 121

  135 if_else_statement: Switch_KEY . Open_BRACKET expression Close_BRACKET statement

    Open_BRACKET  shift, and go to state 206


State 122

   22 assign_expressions: OCurly_BRACKET . argument_expression_list CCurly_BRACKET
  146 compound_statement: OCurly_BRACKET . CCurly_BRACKET
  147                   | OCurly_BRACKET . statement_list CCurly_BRACKET

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    CCurly_BRACKET  shift, and go to state 123
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 207
    constant_expression        go to state 109
    argument_expression_list   go to state 184
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 130
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    statement_list             go to state 138
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 123

  146 compound_statement: OCurly_BRACKET CCurly_BRACKET .

    $default  reduce using rule 146 (compound_statement)


State 124

  144 expression_statement: Semicolon .

    $default  reduce using rule 144 (expression_statement)


State 125

   86 primary_expression: IDENTIFIER .
   91 postfix_expression: IDENTIFIER . Open_BRACKET Close_BRACKET
   92                   | IDENTIFIER . Open_BRACKET argument_expression_list Close_BRACKET
   94                   | IDENTIFIER . Increment_MATH
   95                   | IDENTIFIER . Decrement_MATH
  128 labeled_statement: IDENTIFIER . Colon statement

    Increment_MATH  shift, and go to state 157
    Decrement_MATH  shift, and go to state 158
    Open_BRACKET    shift, and go to state 159
    Colon           shift, and go to state 208

    $default  reduce using rule 86 (primary_expression)


State 126

    9 expression: expression . Comma assign_expressions
  145 expression_statement: expression . Semicolon

    Semicolon  shift, and go to state 209
    Comma      shift, and go to state 210


State 127

    8 expression: assign_expressions .

    $default  reduce using rule 8 (expression)


State 128

   47 declaration: all_type_specifiers . Semicolon
   48            | all_type_specifiers . initialisers_list Semicolon

    Multiply_MATH  shift, and go to state 35
    Open_BRACKET   shift, and go to state 36
    Semicolon      shift, and go to state 37
    IDENTIFIER     shift, and go to state 57

    direct_declarator        go to state 39
    declarator               go to state 40
    pointer                  go to state 41
    initialisers_list        go to state 42
    initialisers_declarator  go to state 43


State 129

  125 statement: declaration .

    $default  reduce using rule 125 (statement)


State 130

  148 statement_list: statement .

    $default  reduce using rule 148 (statement_list)


State 131

  126 statement: labeled_statement .

    $default  reduce using rule 126 (statement)


State 132

  127 statement: case_statement_list .
  129 case_statement_list: case_statement_list . Case_KEY constant_expression Colon statement
  130                    | case_statement_list . Case_KEY Default_KEY Colon statement

    Case_KEY  shift, and go to state 211

    Case_KEY  [reduce using rule 127 (statement)]
    $default  reduce using rule 127 (statement)


State 133

  122 statement: if_else_statement .

    $default  reduce using rule 122 (statement)


State 134

  123 statement: for_while_statement .

    $default  reduce using rule 123 (statement)


State 135

  124 statement: return_statement .

    $default  reduce using rule 124 (statement)


State 136

  120 statement: expression_statement .

    $default  reduce using rule 120 (statement)


State 137

  121 statement: compound_statement .

    $default  reduce using rule 121 (statement)


State 138

  147 compound_statement: OCurly_BRACKET statement_list . CCurly_BRACKET
  149 statement_list: statement_list . statement

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    CCurly_BRACKET  shift, and go to state 212
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 213
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 139

   29 function_definition: IDENTIFIER Open_BRACKET parameter_type_list Close_BRACKET compound_statement .

    $default  reduce using rule 29 (function_definition)


State 140

  115 parameter_type_list: parameter_list Comma Ellipses .

    $default  reduce using rule 115 (parameter_type_list)


State 141

  116 parameter_list: parameter_list Comma parameter_declaration .

    $default  reduce using rule 116 (parameter_list)


State 142

   39 direct_declarator: IDENTIFIER Open_BRACKET Close_BRACKET .

    $default  reduce using rule 39 (direct_declarator)


State 143

   38 direct_declarator: IDENTIFIER Open_BRACKET parameter_type_list . Close_BRACKET

    Close_BRACKET  shift, and go to state 214


State 144

   28 function_definition: all_type_specifiers IDENTIFIER Open_BRACKET Close_BRACKET compound_statement .

    $default  reduce using rule 28 (function_definition)


State 145

   27 function_definition: all_type_specifiers IDENTIFIER Open_BRACKET parameter_type_list Close_BRACKET . compound_statement
   38 direct_declarator: IDENTIFIER Open_BRACKET parameter_type_list Close_BRACKET .

    OCurly_BRACKET  shift, and go to state 65

    $default  reduce using rule 38 (direct_declarator)

    compound_statement  go to state 215


State 146

   87 primary_expression: Open_BRACKET . expression Close_BRACKET
  101 unary_expression: Sizeof_KEY Open_BRACKET . type_name Close_BRACKET

    String_KEY      shift, and go to state 1
    Short_KEY       shift, and go to state 2
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 52
    Enum_KEY        shift, and go to state 16
    Signed_KEY      shift, and go to state 18
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 154
    assign_expressions         go to state 127
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    type_name                  go to state 216
    specifier_qualifier_list   go to state 156
    type_specifier             go to state 55
    unary_operator             go to state 106
    type_qualifier             go to state 56


State 147

  100 unary_expression: Sizeof_KEY unary_expression .

    $default  reduce using rule 100 (unary_expression)


State 148

   85 primary_expression: Subtract_MATH . primary_expression

    Subtract_MATH   shift, and go to state 148
    Open_BRACKET    shift, and go to state 149
    IDENTIFIER      shift, and go to state 150
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    primary_expression  go to state 151


State 149

   87 primary_expression: Open_BRACKET . expression Close_BRACKET

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 154
    assign_expressions         go to state 127
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 150

   86 primary_expression: IDENTIFIER .

    $default  reduce using rule 86 (primary_expression)


State 151

   85 primary_expression: Subtract_MATH primary_expression .

    $default  reduce using rule 85 (primary_expression)


State 152

   97 unary_expression: Increment_MATH IDENTIFIER .

    $default  reduce using rule 97 (unary_expression)


State 153

   98 unary_expression: Decrement_MATH IDENTIFIER .

    $default  reduce using rule 98 (unary_expression)


State 154

    9 expression: expression . Comma assign_expressions
   87 primary_expression: Open_BRACKET expression . Close_BRACKET

    Close_BRACKET  shift, and go to state 217
    Comma          shift, and go to state 210


State 155

   64 cast_expression: Open_BRACKET type_name . Close_BRACKET cast_expression

    Close_BRACKET  shift, and go to state 218


State 156

  102 type_name: specifier_qualifier_list .
  103          | specifier_qualifier_list . abstract_declarator

    Open_BRACKET     shift, and go to state 219
    OSquare_BRACKET  shift, and go to state 220

    $default  reduce using rule 102 (type_name)

    abstract_declarator  go to state 221


State 157

   94 postfix_expression: IDENTIFIER Increment_MATH .

    $default  reduce using rule 94 (postfix_expression)


State 158

   95 postfix_expression: IDENTIFIER Decrement_MATH .

    $default  reduce using rule 95 (postfix_expression)


State 159

   91 postfix_expression: IDENTIFIER Open_BRACKET . Close_BRACKET
   92                   | IDENTIFIER Open_BRACKET . argument_expression_list Close_BRACKET

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    Close_BRACKET   shift, and go to state 222
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 183
    constant_expression        go to state 109
    argument_expression_list   go to state 223
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 160

   36 direct_declarator: IDENTIFIER OSquare_BRACKET constant_expression CSquare_BRACKET .

    $default  reduce using rule 36 (direct_declarator)


State 161

   54 shift_expression: shift_expression LShift_BIT . additive_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    additive_expression        go to state 224
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 162

   55 shift_expression: shift_expression RShift_BIT . additive_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    additive_expression        go to state 225
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 163

   57 additive_expression: additive_expression Plus_MATH . multiplicative_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    multiplicative_expression  go to state 226
    cast_expression            go to state 95
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 164

   58 additive_expression: additive_expression Subtract_MATH . multiplicative_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    multiplicative_expression  go to state 227
    cast_expression            go to state 95
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 165

   60 multiplicative_expression: multiplicative_expression Multiply_MATH . cast_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    cast_expression     go to state 228
    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 105
    unary_operator      go to state 106


State 166

   61 multiplicative_expression: multiplicative_expression Divide_MATH . cast_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    cast_expression     go to state 229
    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 105
    unary_operator      go to state 106


State 167

   62 multiplicative_expression: multiplicative_expression Percentage_MATH . cast_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    cast_expression     go to state 230
    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 105
    unary_operator      go to state 106


State 168

   66 relational_expression: relational_expression Less_COMP . shift_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    shift_expression           go to state 231
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 169

   67 relational_expression: relational_expression Greater_COMP . shift_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    shift_expression           go to state 232
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 170

   69 relational_expression: relational_expression GEqual_COMP . shift_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    shift_expression           go to state 233
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 171

   68 relational_expression: relational_expression LEqual_COMP . shift_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    shift_expression           go to state 234
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 172

   71 equality_expression: equality_expression Equal_COMP . relational_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 235
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 173

   72 equality_expression: equality_expression NEqual_COMP . relational_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 236
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 174

   74 and_expression: and_expression And_BIT . equality_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 237
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 175

   76 exclusive_or_expression: exclusive_or_expression Xor_BIT . and_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 238
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 176

   78 inclusive_or_expression: inclusive_or_expression Or_BIT . exclusive_or_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 239
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 177

   80 logical_and_expression: logical_and_expression AndAnd_BIT . inclusive_or_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 240
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 178

   82 conditional_logical_or: conditional_logical_or OrOr_BIT . logical_and_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 241
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 179

   24 constant_expression: conditional_logical_or Question_BIT . expression Colon constant_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 242
    assign_expressions         go to state 127
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 180

   93 postfix_expression: primary_expression Dot_Ref . IDENTIFIER

    IDENTIFIER  shift, and go to state 243


State 181

   90 postfix_expression: postfix_expression OSquare_BRACKET . expression CSquare_BRACKET

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 244
    assign_expressions         go to state 127
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 182

   99 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 99 (unary_expression)


State 183

   25 argument_expression_list: assign_expressions .

    $default  reduce using rule 25 (argument_expression_list)


State 184

   22 assign_expressions: OCurly_BRACKET argument_expression_list . CCurly_BRACKET
   26 argument_expression_list: argument_expression_list . Comma assign_expressions

    CCurly_BRACKET  shift, and go to state 245
    Comma           shift, and go to state 246


State 185

   12 assign_expressions: unary_expression Add_CURRENT . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 247
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 186

   13 assign_expressions: unary_expression Sub_CURRENT . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 248
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 187

   14 assign_expressions: unary_expression Mul_CURRENT . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 249
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 188

   15 assign_expressions: unary_expression Div_CURRENT . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 250
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 189

   16 assign_expressions: unary_expression Mod_CURRENT . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 251
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 190

   17 assign_expressions: unary_expression And_CURRENT . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 252
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 191

   18 assign_expressions: unary_expression Xor_CURRENT . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 253
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 192

   19 assign_expressions: unary_expression Or_CURRENT . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 254
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 193

   20 assign_expressions: unary_expression LShift_CURRENT . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 255
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 194

   21 assign_expressions: unary_expression RShift_CURRENT . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 256
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 195

   11 assign_expressions: unary_expression Equal . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 257
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 196

  143 return_statement: Continue_KEY Semicolon .

    $default  reduce using rule 143 (return_statement)


State 197

  132 case_statement_list: Default_KEY Colon . statement

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 258
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 198

  133 if_else_statement: If_KEY Open_BRACKET . expression Close_BRACKET statement
  134                  | If_KEY Open_BRACKET . expression Close_BRACKET statement Else_KEY statement

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 259
    assign_expressions         go to state 127
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 199

  138 for_while_statement: While_KEY Open_BRACKET . expression Close_BRACKET statement

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 260
    assign_expressions         go to state 127
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 200

  136 for_while_statement: For_KEY Open_BRACKET . expression Semicolon expression Semicolon Close_BRACKET statement
  137                    | For_KEY Open_BRACKET . expression Semicolon expression Semicolon expression Close_BRACKET statement

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 261
    assign_expressions         go to state 127
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 201

  139 for_while_statement: Do_KEY statement . While_KEY Open_BRACKET expression Close_BRACKET Semicolon

    While_KEY  shift, and go to state 262


State 202

  140 return_statement: Return_KEY Semicolon .

    $default  reduce using rule 140 (return_statement)


State 203

    9 expression: expression . Comma assign_expressions
  141 return_statement: Return_KEY expression . Semicolon

    Semicolon  shift, and go to state 263
    Comma      shift, and go to state 210


State 204

  131 case_statement_list: Case_KEY constant_expression . Colon statement

    Colon  shift, and go to state 264


State 205

  142 return_statement: Break_KEY Semicolon .

    $default  reduce using rule 142 (return_statement)


State 206

  135 if_else_statement: Switch_KEY Open_BRACKET . expression Close_BRACKET statement

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 265
    assign_expressions         go to state 127
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 207

    8 expression: assign_expressions .
   25 argument_expression_list: assign_expressions .

    CCurly_BRACKET  reduce using rule 25 (argument_expression_list)
    Comma           reduce using rule 8 (expression)
    Comma           [reduce using rule 25 (argument_expression_list)]
    $default        reduce using rule 8 (expression)


State 208

  128 labeled_statement: IDENTIFIER Colon . statement

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 266
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 209

  145 expression_statement: expression Semicolon .

    $default  reduce using rule 145 (expression_statement)


State 210

    9 expression: expression Comma . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 267
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 211

  129 case_statement_list: case_statement_list Case_KEY . constant_expression Colon statement
  130                    | case_statement_list Case_KEY . Default_KEY Colon statement

    Default_KEY     shift, and go to state 268
    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    constant_expression        go to state 269
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 212

  147 compound_statement: OCurly_BRACKET statement_list CCurly_BRACKET .

    $default  reduce using rule 147 (compound_statement)


State 213

  149 statement_list: statement_list statement .

    $default  reduce using rule 149 (statement_list)


State 214

   38 direct_declarator: IDENTIFIER Open_BRACKET parameter_type_list Close_BRACKET .

    $default  reduce using rule 38 (direct_declarator)


State 215

   27 function_definition: all_type_specifiers IDENTIFIER Open_BRACKET parameter_type_list Close_BRACKET compound_statement .

    $default  reduce using rule 27 (function_definition)


State 216

  101 unary_expression: Sizeof_KEY Open_BRACKET type_name . Close_BRACKET

    Close_BRACKET  shift, and go to state 270


State 217

   87 primary_expression: Open_BRACKET expression Close_BRACKET .

    $default  reduce using rule 87 (primary_expression)


State 218

   64 cast_expression: Open_BRACKET type_name Close_BRACKET . cast_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    cast_expression     go to state 271
    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 105
    unary_operator      go to state 106


State 219

  107 abstract_declarator: Open_BRACKET . abstract_declarator Close_BRACKET
  112                    | Open_BRACKET . Close_BRACKET
  113                    | Open_BRACKET . parameter_type_list Close_BRACKET

    String_KEY       shift, and go to state 1
    Short_KEY        shift, and go to state 2
    Extern_KEY       shift, and go to state 3
    Float_KEY        shift, and go to state 4
    Unsigned_KEY     shift, and go to state 5
    Void_KEY         shift, and go to state 6
    Long_KEY         shift, and go to state 7
    Volatile_KEY     shift, and go to state 8
    Const_KEY        shift, and go to state 9
    Char_KEY         shift, and go to state 10
    Auto_KEY         shift, and go to state 11
    Double_KEY       shift, and go to state 12
    Int_KEY          shift, and go to state 13
    Typedef_KEY      shift, and go to state 14
    Static_KEY       shift, and go to state 15
    Enum_KEY         shift, and go to state 16
    Register_KEY     shift, and go to state 17
    Signed_KEY       shift, and go to state 18
    Struct_KEY       shift, and go to state 19
    Open_BRACKET     shift, and go to state 219
    Close_BRACKET    shift, and go to state 272
    OSquare_BRACKET  shift, and go to state 220

    all_type_specifiers    go to state 48
    abstract_declarator    go to state 273
    parameter_type_list    go to state 274
    parameter_list         go to state 50
    parameter_declaration  go to state 51
    storage_specifiers     go to state 27
    type_specifier         go to state 28
    type_qualifier         go to state 29


State 220

  108 abstract_declarator: OSquare_BRACKET . CSquare_BRACKET
  109                    | OSquare_BRACKET . constant_expression CSquare_BRACKET

    Sizeof_KEY       shift, and go to state 76
    Plus_MATH        shift, and go to state 77
    Subtract_MATH    shift, and go to state 78
    Multiply_MATH    shift, and go to state 79
    Increment_MATH   shift, and go to state 80
    Decrement_MATH   shift, and go to state 81
    And_BIT          shift, and go to state 82
    Tilde_BIT        shift, and go to state 83
    Not_BIT          shift, and go to state 84
    Open_BRACKET     shift, and go to state 85
    CSquare_BRACKET  shift, and go to state 275
    IDENTIFIER       shift, and go to state 87
    String_literal   shift, and go to state 88
    NUMBER           shift, and go to state 89
    Char_literal     shift, and go to state 90

    constant_expression        go to state 276
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 221

  103 type_name: specifier_qualifier_list abstract_declarator .
  110 abstract_declarator: abstract_declarator . OSquare_BRACKET CSquare_BRACKET
  111                    | abstract_declarator . OSquare_BRACKET constant_expression CSquare_BRACKET

    OSquare_BRACKET  shift, and go to state 277

    $default  reduce using rule 103 (type_name)


State 222

   91 postfix_expression: IDENTIFIER Open_BRACKET Close_BRACKET .

    $default  reduce using rule 91 (postfix_expression)


State 223

   26 argument_expression_list: argument_expression_list . Comma assign_expressions
   92 postfix_expression: IDENTIFIER Open_BRACKET argument_expression_list . Close_BRACKET

    Close_BRACKET  shift, and go to state 278
    Comma          shift, and go to state 246


State 224

   54 shift_expression: shift_expression LShift_BIT additive_expression .
   57 additive_expression: additive_expression . Plus_MATH multiplicative_expression
   58                    | additive_expression . Subtract_MATH multiplicative_expression

    Plus_MATH      shift, and go to state 163
    Subtract_MATH  shift, and go to state 164

    $default  reduce using rule 54 (shift_expression)


State 225

   55 shift_expression: shift_expression RShift_BIT additive_expression .
   57 additive_expression: additive_expression . Plus_MATH multiplicative_expression
   58                    | additive_expression . Subtract_MATH multiplicative_expression

    Plus_MATH      shift, and go to state 163
    Subtract_MATH  shift, and go to state 164

    $default  reduce using rule 55 (shift_expression)


State 226

   57 additive_expression: additive_expression Plus_MATH multiplicative_expression .
   60 multiplicative_expression: multiplicative_expression . Multiply_MATH cast_expression
   61                          | multiplicative_expression . Divide_MATH cast_expression
   62                          | multiplicative_expression . Percentage_MATH cast_expression

    Multiply_MATH    shift, and go to state 165
    Divide_MATH      shift, and go to state 166
    Percentage_MATH  shift, and go to state 167

    $default  reduce using rule 57 (additive_expression)


State 227

   58 additive_expression: additive_expression Subtract_MATH multiplicative_expression .
   60 multiplicative_expression: multiplicative_expression . Multiply_MATH cast_expression
   61                          | multiplicative_expression . Divide_MATH cast_expression
   62                          | multiplicative_expression . Percentage_MATH cast_expression

    Multiply_MATH    shift, and go to state 165
    Divide_MATH      shift, and go to state 166
    Percentage_MATH  shift, and go to state 167

    $default  reduce using rule 58 (additive_expression)


State 228

   60 multiplicative_expression: multiplicative_expression Multiply_MATH cast_expression .

    $default  reduce using rule 60 (multiplicative_expression)


State 229

   61 multiplicative_expression: multiplicative_expression Divide_MATH cast_expression .

    $default  reduce using rule 61 (multiplicative_expression)


State 230

   62 multiplicative_expression: multiplicative_expression Percentage_MATH cast_expression .

    $default  reduce using rule 62 (multiplicative_expression)


State 231

   54 shift_expression: shift_expression . LShift_BIT additive_expression
   55                 | shift_expression . RShift_BIT additive_expression
   66 relational_expression: relational_expression Less_COMP shift_expression .

    LShift_BIT  shift, and go to state 161
    RShift_BIT  shift, and go to state 162

    $default  reduce using rule 66 (relational_expression)


State 232

   54 shift_expression: shift_expression . LShift_BIT additive_expression
   55                 | shift_expression . RShift_BIT additive_expression
   67 relational_expression: relational_expression Greater_COMP shift_expression .

    LShift_BIT  shift, and go to state 161
    RShift_BIT  shift, and go to state 162

    $default  reduce using rule 67 (relational_expression)


State 233

   54 shift_expression: shift_expression . LShift_BIT additive_expression
   55                 | shift_expression . RShift_BIT additive_expression
   69 relational_expression: relational_expression GEqual_COMP shift_expression .

    LShift_BIT  shift, and go to state 161
    RShift_BIT  shift, and go to state 162

    $default  reduce using rule 69 (relational_expression)


State 234

   54 shift_expression: shift_expression . LShift_BIT additive_expression
   55                 | shift_expression . RShift_BIT additive_expression
   68 relational_expression: relational_expression LEqual_COMP shift_expression .

    LShift_BIT  shift, and go to state 161
    RShift_BIT  shift, and go to state 162

    $default  reduce using rule 68 (relational_expression)


State 235

   66 relational_expression: relational_expression . Less_COMP shift_expression
   67                      | relational_expression . Greater_COMP shift_expression
   68                      | relational_expression . LEqual_COMP shift_expression
   69                      | relational_expression . GEqual_COMP shift_expression
   71 equality_expression: equality_expression Equal_COMP relational_expression .

    Less_COMP     shift, and go to state 168
    Greater_COMP  shift, and go to state 169
    GEqual_COMP   shift, and go to state 170
    LEqual_COMP   shift, and go to state 171

    $default  reduce using rule 71 (equality_expression)


State 236

   66 relational_expression: relational_expression . Less_COMP shift_expression
   67                      | relational_expression . Greater_COMP shift_expression
   68                      | relational_expression . LEqual_COMP shift_expression
   69                      | relational_expression . GEqual_COMP shift_expression
   72 equality_expression: equality_expression NEqual_COMP relational_expression .

    Less_COMP     shift, and go to state 168
    Greater_COMP  shift, and go to state 169
    GEqual_COMP   shift, and go to state 170
    LEqual_COMP   shift, and go to state 171

    $default  reduce using rule 72 (equality_expression)


State 237

   71 equality_expression: equality_expression . Equal_COMP relational_expression
   72                    | equality_expression . NEqual_COMP relational_expression
   74 and_expression: and_expression And_BIT equality_expression .

    Equal_COMP   shift, and go to state 172
    NEqual_COMP  shift, and go to state 173

    $default  reduce using rule 74 (and_expression)


State 238

   74 and_expression: and_expression . And_BIT equality_expression
   76 exclusive_or_expression: exclusive_or_expression Xor_BIT and_expression .

    And_BIT  shift, and go to state 174

    $default  reduce using rule 76 (exclusive_or_expression)


State 239

   76 exclusive_or_expression: exclusive_or_expression . Xor_BIT and_expression
   78 inclusive_or_expression: inclusive_or_expression Or_BIT exclusive_or_expression .

    Xor_BIT  shift, and go to state 175

    $default  reduce using rule 78 (inclusive_or_expression)


State 240

   78 inclusive_or_expression: inclusive_or_expression . Or_BIT exclusive_or_expression
   80 logical_and_expression: logical_and_expression AndAnd_BIT inclusive_or_expression .

    Or_BIT  shift, and go to state 176

    $default  reduce using rule 80 (logical_and_expression)


State 241

   80 logical_and_expression: logical_and_expression . AndAnd_BIT inclusive_or_expression
   82 conditional_logical_or: conditional_logical_or OrOr_BIT logical_and_expression .

    AndAnd_BIT  shift, and go to state 177

    $default  reduce using rule 82 (conditional_logical_or)


State 242

    9 expression: expression . Comma assign_expressions
   24 constant_expression: conditional_logical_or Question_BIT expression . Colon constant_expression

    Colon  shift, and go to state 279
    Comma  shift, and go to state 210


State 243

   93 postfix_expression: primary_expression Dot_Ref IDENTIFIER .

    $default  reduce using rule 93 (postfix_expression)


State 244

    9 expression: expression . Comma assign_expressions
   90 postfix_expression: postfix_expression OSquare_BRACKET expression . CSquare_BRACKET

    CSquare_BRACKET  shift, and go to state 280
    Comma            shift, and go to state 210


State 245

   22 assign_expressions: OCurly_BRACKET argument_expression_list CCurly_BRACKET .

    $default  reduce using rule 22 (assign_expressions)


State 246

   26 argument_expression_list: argument_expression_list Comma . assign_expressions

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    assign_expressions         go to state 281
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 247

   12 assign_expressions: unary_expression Add_CURRENT assign_expressions .

    $default  reduce using rule 12 (assign_expressions)


State 248

   13 assign_expressions: unary_expression Sub_CURRENT assign_expressions .

    $default  reduce using rule 13 (assign_expressions)


State 249

   14 assign_expressions: unary_expression Mul_CURRENT assign_expressions .

    $default  reduce using rule 14 (assign_expressions)


State 250

   15 assign_expressions: unary_expression Div_CURRENT assign_expressions .

    $default  reduce using rule 15 (assign_expressions)


State 251

   16 assign_expressions: unary_expression Mod_CURRENT assign_expressions .

    $default  reduce using rule 16 (assign_expressions)


State 252

   17 assign_expressions: unary_expression And_CURRENT assign_expressions .

    $default  reduce using rule 17 (assign_expressions)


State 253

   18 assign_expressions: unary_expression Xor_CURRENT assign_expressions .

    $default  reduce using rule 18 (assign_expressions)


State 254

   19 assign_expressions: unary_expression Or_CURRENT assign_expressions .

    $default  reduce using rule 19 (assign_expressions)


State 255

   20 assign_expressions: unary_expression LShift_CURRENT assign_expressions .

    $default  reduce using rule 20 (assign_expressions)


State 256

   21 assign_expressions: unary_expression RShift_CURRENT assign_expressions .

    $default  reduce using rule 21 (assign_expressions)


State 257

   11 assign_expressions: unary_expression Equal assign_expressions .

    $default  reduce using rule 11 (assign_expressions)


State 258

  132 case_statement_list: Default_KEY Colon statement .

    $default  reduce using rule 132 (case_statement_list)


State 259

    9 expression: expression . Comma assign_expressions
  133 if_else_statement: If_KEY Open_BRACKET expression . Close_BRACKET statement
  134                  | If_KEY Open_BRACKET expression . Close_BRACKET statement Else_KEY statement

    Close_BRACKET  shift, and go to state 282
    Comma          shift, and go to state 210


State 260

    9 expression: expression . Comma assign_expressions
  138 for_while_statement: While_KEY Open_BRACKET expression . Close_BRACKET statement

    Close_BRACKET  shift, and go to state 283
    Comma          shift, and go to state 210


State 261

    9 expression: expression . Comma assign_expressions
  136 for_while_statement: For_KEY Open_BRACKET expression . Semicolon expression Semicolon Close_BRACKET statement
  137                    | For_KEY Open_BRACKET expression . Semicolon expression Semicolon expression Close_BRACKET statement

    Semicolon  shift, and go to state 284
    Comma      shift, and go to state 210


State 262

  139 for_while_statement: Do_KEY statement While_KEY . Open_BRACKET expression Close_BRACKET Semicolon

    Open_BRACKET  shift, and go to state 285


State 263

  141 return_statement: Return_KEY expression Semicolon .

    $default  reduce using rule 141 (return_statement)


State 264

  131 case_statement_list: Case_KEY constant_expression Colon . statement

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 286
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 265

    9 expression: expression . Comma assign_expressions
  135 if_else_statement: Switch_KEY Open_BRACKET expression . Close_BRACKET statement

    Close_BRACKET  shift, and go to state 287
    Comma          shift, and go to state 210


State 266

  128 labeled_statement: IDENTIFIER Colon statement .

    $default  reduce using rule 128 (labeled_statement)


State 267

    9 expression: expression Comma assign_expressions .

    $default  reduce using rule 9 (expression)


State 268

  130 case_statement_list: case_statement_list Case_KEY Default_KEY . Colon statement

    Colon  shift, and go to state 288


State 269

  129 case_statement_list: case_statement_list Case_KEY constant_expression . Colon statement

    Colon  shift, and go to state 289


State 270

  101 unary_expression: Sizeof_KEY Open_BRACKET type_name Close_BRACKET .

    $default  reduce using rule 101 (unary_expression)


State 271

   64 cast_expression: Open_BRACKET type_name Close_BRACKET cast_expression .

    $default  reduce using rule 64 (cast_expression)


State 272

  112 abstract_declarator: Open_BRACKET Close_BRACKET .

    $default  reduce using rule 112 (abstract_declarator)


State 273

  107 abstract_declarator: Open_BRACKET abstract_declarator . Close_BRACKET
  110                    | abstract_declarator . OSquare_BRACKET CSquare_BRACKET
  111                    | abstract_declarator . OSquare_BRACKET constant_expression CSquare_BRACKET

    Close_BRACKET    shift, and go to state 290
    OSquare_BRACKET  shift, and go to state 277


State 274

  113 abstract_declarator: Open_BRACKET parameter_type_list . Close_BRACKET

    Close_BRACKET  shift, and go to state 291


State 275

  108 abstract_declarator: OSquare_BRACKET CSquare_BRACKET .

    $default  reduce using rule 108 (abstract_declarator)


State 276

  109 abstract_declarator: OSquare_BRACKET constant_expression . CSquare_BRACKET

    CSquare_BRACKET  shift, and go to state 292


State 277

  110 abstract_declarator: abstract_declarator OSquare_BRACKET . CSquare_BRACKET
  111                    | abstract_declarator OSquare_BRACKET . constant_expression CSquare_BRACKET

    Sizeof_KEY       shift, and go to state 76
    Plus_MATH        shift, and go to state 77
    Subtract_MATH    shift, and go to state 78
    Multiply_MATH    shift, and go to state 79
    Increment_MATH   shift, and go to state 80
    Decrement_MATH   shift, and go to state 81
    And_BIT          shift, and go to state 82
    Tilde_BIT        shift, and go to state 83
    Not_BIT          shift, and go to state 84
    Open_BRACKET     shift, and go to state 85
    CSquare_BRACKET  shift, and go to state 293
    IDENTIFIER       shift, and go to state 87
    String_literal   shift, and go to state 88
    NUMBER           shift, and go to state 89
    Char_literal     shift, and go to state 90

    constant_expression        go to state 294
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 278

   92 postfix_expression: IDENTIFIER Open_BRACKET argument_expression_list Close_BRACKET .

    $default  reduce using rule 92 (postfix_expression)


State 279

   24 constant_expression: conditional_logical_or Question_BIT expression Colon . constant_expression

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    constant_expression        go to state 295
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106


State 280

   90 postfix_expression: postfix_expression OSquare_BRACKET expression CSquare_BRACKET .

    $default  reduce using rule 90 (postfix_expression)


State 281

   26 argument_expression_list: argument_expression_list Comma assign_expressions .

    $default  reduce using rule 26 (argument_expression_list)


State 282

  133 if_else_statement: If_KEY Open_BRACKET expression Close_BRACKET . statement
  134                  | If_KEY Open_BRACKET expression Close_BRACKET . statement Else_KEY statement

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 296
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 283

  138 for_while_statement: While_KEY Open_BRACKET expression Close_BRACKET . statement

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 297
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 284

  136 for_while_statement: For_KEY Open_BRACKET expression Semicolon . expression Semicolon Close_BRACKET statement
  137                    | For_KEY Open_BRACKET expression Semicolon . expression Semicolon expression Close_BRACKET statement

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 298
    assign_expressions         go to state 127
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 285

  139 for_while_statement: Do_KEY statement While_KEY Open_BRACKET . expression Close_BRACKET Semicolon

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 299
    assign_expressions         go to state 127
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 286

  131 case_statement_list: Case_KEY constant_expression Colon statement .

    $default  reduce using rule 131 (case_statement_list)


State 287

  135 if_else_statement: Switch_KEY Open_BRACKET expression Close_BRACKET . statement

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 300
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 288

  130 case_statement_list: case_statement_list Case_KEY Default_KEY Colon . statement

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 301
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 289

  129 case_statement_list: case_statement_list Case_KEY constant_expression Colon . statement

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 302
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 290

  107 abstract_declarator: Open_BRACKET abstract_declarator Close_BRACKET .

    $default  reduce using rule 107 (abstract_declarator)


State 291

  113 abstract_declarator: Open_BRACKET parameter_type_list Close_BRACKET .

    $default  reduce using rule 113 (abstract_declarator)


State 292

  109 abstract_declarator: OSquare_BRACKET constant_expression CSquare_BRACKET .

    $default  reduce using rule 109 (abstract_declarator)


State 293

  110 abstract_declarator: abstract_declarator OSquare_BRACKET CSquare_BRACKET .

    $default  reduce using rule 110 (abstract_declarator)


State 294

  111 abstract_declarator: abstract_declarator OSquare_BRACKET constant_expression . CSquare_BRACKET

    CSquare_BRACKET  shift, and go to state 303


State 295

   24 constant_expression: conditional_logical_or Question_BIT expression Colon constant_expression .

    $default  reduce using rule 24 (constant_expression)


State 296

  133 if_else_statement: If_KEY Open_BRACKET expression Close_BRACKET statement .
  134                  | If_KEY Open_BRACKET expression Close_BRACKET statement . Else_KEY statement

    Else_KEY  shift, and go to state 304

    Else_KEY  [reduce using rule 133 (if_else_statement)]
    $default  reduce using rule 133 (if_else_statement)


State 297

  138 for_while_statement: While_KEY Open_BRACKET expression Close_BRACKET statement .

    $default  reduce using rule 138 (for_while_statement)


State 298

    9 expression: expression . Comma assign_expressions
  136 for_while_statement: For_KEY Open_BRACKET expression Semicolon expression . Semicolon Close_BRACKET statement
  137                    | For_KEY Open_BRACKET expression Semicolon expression . Semicolon expression Close_BRACKET statement

    Semicolon  shift, and go to state 305
    Comma      shift, and go to state 210


State 299

    9 expression: expression . Comma assign_expressions
  139 for_while_statement: Do_KEY statement While_KEY Open_BRACKET expression . Close_BRACKET Semicolon

    Close_BRACKET  shift, and go to state 306
    Comma          shift, and go to state 210


State 300

  135 if_else_statement: Switch_KEY Open_BRACKET expression Close_BRACKET statement .

    $default  reduce using rule 135 (if_else_statement)


State 301

  130 case_statement_list: case_statement_list Case_KEY Default_KEY Colon statement .

    $default  reduce using rule 130 (case_statement_list)


State 302

  129 case_statement_list: case_statement_list Case_KEY constant_expression Colon statement .

    $default  reduce using rule 129 (case_statement_list)


State 303

  111 abstract_declarator: abstract_declarator OSquare_BRACKET constant_expression CSquare_BRACKET .

    $default  reduce using rule 111 (abstract_declarator)


State 304

  134 if_else_statement: If_KEY Open_BRACKET expression Close_BRACKET statement Else_KEY . statement

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 307
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 305

  136 for_while_statement: For_KEY Open_BRACKET expression Semicolon expression Semicolon . Close_BRACKET statement
  137                    | For_KEY Open_BRACKET expression Semicolon expression Semicolon . expression Close_BRACKET statement

    Sizeof_KEY      shift, and go to state 76
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    Close_BRACKET   shift, and go to state 308
    OCurly_BRACKET  shift, and go to state 107
    IDENTIFIER      shift, and go to state 87
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 309
    assign_expressions         go to state 127
    constant_expression        go to state 109
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    unary_operator             go to state 106


State 306

  139 for_while_statement: Do_KEY statement While_KEY Open_BRACKET expression Close_BRACKET . Semicolon

    Semicolon  shift, and go to state 310


State 307

  134 if_else_statement: If_KEY Open_BRACKET expression Close_BRACKET statement Else_KEY statement .

    $default  reduce using rule 134 (if_else_statement)


State 308

  136 for_while_statement: For_KEY Open_BRACKET expression Semicolon expression Semicolon Close_BRACKET . statement

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 311
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 309

    9 expression: expression . Comma assign_expressions
  137 for_while_statement: For_KEY Open_BRACKET expression Semicolon expression Semicolon expression . Close_BRACKET statement

    Close_BRACKET  shift, and go to state 312
    Comma          shift, and go to state 210


State 310

  139 for_while_statement: Do_KEY statement While_KEY Open_BRACKET expression Close_BRACKET Semicolon .

    $default  reduce using rule 139 (for_while_statement)


State 311

  136 for_while_statement: For_KEY Open_BRACKET expression Semicolon expression Semicolon Close_BRACKET statement .

    $default  reduce using rule 136 (for_while_statement)


State 312

  137 for_while_statement: For_KEY Open_BRACKET expression Semicolon expression Semicolon expression Close_BRACKET . statement

    Continue_KEY    shift, and go to state 112
    String_KEY      shift, and go to state 1
    Default_KEY     shift, and go to state 113
    Short_KEY       shift, and go to state 2
    If_KEY          shift, and go to state 114
    Extern_KEY      shift, and go to state 3
    Float_KEY       shift, and go to state 4
    Unsigned_KEY    shift, and go to state 5
    Void_KEY        shift, and go to state 6
    Long_KEY        shift, and go to state 7
    Volatile_KEY    shift, and go to state 8
    While_KEY       shift, and go to state 115
    Const_KEY       shift, and go to state 9
    Char_KEY        shift, and go to state 10
    For_KEY         shift, and go to state 116
    Auto_KEY        shift, and go to state 11
    Do_KEY          shift, and go to state 117
    Sizeof_KEY      shift, and go to state 76
    Double_KEY      shift, and go to state 12
    Int_KEY         shift, and go to state 13
    Typedef_KEY     shift, and go to state 14
    Return_KEY      shift, and go to state 118
    Static_KEY      shift, and go to state 15
    Enum_KEY        shift, and go to state 16
    Case_KEY        shift, and go to state 119
    Register_KEY    shift, and go to state 17
    Break_KEY       shift, and go to state 120
    Signed_KEY      shift, and go to state 18
    Switch_KEY      shift, and go to state 121
    Struct_KEY      shift, and go to state 19
    Plus_MATH       shift, and go to state 77
    Subtract_MATH   shift, and go to state 78
    Multiply_MATH   shift, and go to state 79
    Increment_MATH  shift, and go to state 80
    Decrement_MATH  shift, and go to state 81
    And_BIT         shift, and go to state 82
    Tilde_BIT       shift, and go to state 83
    Not_BIT         shift, and go to state 84
    Open_BRACKET    shift, and go to state 85
    OCurly_BRACKET  shift, and go to state 122
    Semicolon       shift, and go to state 124
    IDENTIFIER      shift, and go to state 125
    String_literal  shift, and go to state 88
    NUMBER          shift, and go to state 89
    Char_literal    shift, and go to state 90

    expression                 go to state 126
    assign_expressions         go to state 127
    constant_expression        go to state 109
    all_type_specifiers        go to state 128
    declaration                go to state 129
    shift_expression           go to state 92
    additive_expression        go to state 93
    multiplicative_expression  go to state 94
    cast_expression            go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    and_expression             go to state 98
    exclusive_or_expression    go to state 99
    inclusive_or_expression    go to state 100
    logical_and_expression     go to state 101
    conditional_logical_or     go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 110
    statement                  go to state 313
    labeled_statement          go to state 131
    case_statement_list        go to state 132
    if_else_statement          go to state 133
    for_while_statement        go to state 134
    return_statement           go to state 135
    expression_statement       go to state 136
    compound_statement         go to state 137
    storage_specifiers         go to state 27
    type_specifier             go to state 28
    unary_operator             go to state 106
    type_qualifier             go to state 29


State 313

  137 for_while_statement: For_KEY Open_BRACKET expression Semicolon expression Semicolon expression Close_BRACKET statement .

    $default  reduce using rule 137 (for_while_statement)
